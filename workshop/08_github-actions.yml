on: [push]

env:
  # Staging 'sa1, sa2 sa3, ...'
  # s - staging a - advanced => sa
  nameSuffix: 'sa1'
  appNamePrefix: 'shoppingapp1'

jobs:
  Build_Solution:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '7.0.x' ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore ShoppingApp.sln
      - name: Build_Solution
        run: dotnet build ShoppingApp.sln --configuration Release --no-restore
      - name: Run Integration Tests
        run: > 
          dotnet test test/ShoppingApp.Tests --no-restore --verbosity normal --logger trx 
          --results-directory "IntegrationTestsResults"
      - uses: actions/upload-artifact@v3
        with:
          name: Integration Tests Results
          path: IntegrationTestsResults
##################### Packing Infrastructure Artifacts Stage #####################
      - uses: actions/upload-artifact@v3
        with:
          name: infrastructure
          path: ${{ github.workspace }}/**/deploy/azure-container-apps

##################### Provision Azure Container Registry Stage #####################
  Provision_Azure_Container_Registry:
    needs: Build_Solution
    runs-on: ubuntu-latest
    env:
      resourceGroupName: 'rg-shopping-app-main'
      location: 'eastus'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: 'infrastructure'
          path: ${{ github.workspace }}/infrastructure
      - name: Log infrastructure download
        run: ls -R
      - name: Log in with Azure
        uses: azure/login@v1
        with: 
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az --version
            az group create --name $resourceGroupName --location $location
            ACR_CREDENTIALS=$(az deployment group create --resource-group $resourceGroupName \
              --template-file ${{ github.workspace }}/infrastructure/deploy/azure-container-apps/azure-container-registry.bicep \
              --parameters appNamePrefix=$appNamePrefix --query properties.outputs)
            # This is a critical security issue. It is for demo purposes only!
            ACR_URL=$(jq --raw-output '.acrUrl.value' <<< $ACR_CREDENTIALS)
            ACR_LOGIN=$(jq --raw-output '.acrLogin.value' <<< $ACR_CREDENTIALS)
            ACR_PASSWORD=$(jq --raw-output '.acrPassword.value' <<< $ACR_CREDENTIALS)
            echo "Setting ACR_CREDENTIALS for output"
            echo "ACR credentials is: $ACR_URL $ACR_LOGIN $ACR_PASSWORD"
            env | sort